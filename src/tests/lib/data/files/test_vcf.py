# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

import logging
import os
import shutil
import tempfile
import unittest
from pysam import tabix_index

logger = logging.getLogger(__name__).addHandler(logging.NullHandler())

class TestVcf(unittest.TestCase):
    def setUp(self):
        # create fixtures
        self.tempdir = tempfile.mkdtemp()
        with open(os.path.join(self.tempdir,"in.vcf"),'w') as hotspots:
            hotspots.write("##fileformat=VCFv4.0\n")
            hotspots.write("##contig=<ID=chr7,length=159138663,assembly=hg19>\n")
            hotspots.write("##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"Counts for ref-forward bases, ref-reverse, alt-forward and alt-reverse bases\">\n")
            hotspots.write("##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw Depth\">\n")
            hotspots.write("#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n")
            hotspots.write("chr7\t55249071\t.\tC\tT\t4399\tPASS\tDP=35150;DP4=17465,17450,117,118")
        with open(os.path.join(self.tempdir,"in.withoutcontigs.vcf"),'w') as hotspots:
            hotspots.write("##fileformat=VCFv4.0\n")
            hotspots.write("##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"Counts for ref-forward bases, ref-reverse, alt-forward and alt-reverse bases\">\n")
            hotspots.write("##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw Depth\">\n")
            hotspots.write("##INFO=<ID=AF,Number=1,Type=Float,Description=\"Allelic Frequency\">\n")
            hotspots.write("##INFO=<ID=AD,Number=.,Type=String,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\n")
            hotspots.write("#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n")
            hotspots.write("chr7\t55249071\t.\tC\tT\t4399\tPASS\tDP=35150;DP4=17465,17450,117,118;AD=34915,235;AF=0.5")
        with open(os.path.join(self.tempdir,"reference_info"),'w') as hotspots:
            hotspots.write("#Chr name\tNC ID\tName\tLength\n")
            hotspots.write("chr7\tNC_000007.12\tChr7#NC_000007.12#1#158821424#-1\t158821424")

        with open(os.path.join(self.tempdir,"freebayes.vcf"),"w", encoding="ascii") as freebayes:
            freebayes.write("##fileformat=VCFv4.2\n")
            freebayes.write("##FILTER=<ID=PASS,Description=\"All filters passed\">\n")
            freebayes.write("##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\"Number of observation for each allele\">\n")
            freebayes.write("##FORMAT=<ID=AO,Number=A,Type=Integer,Description=\"Alternate allele observation count\">\n")
            freebayes.write("##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Read Depth\">\n")
            freebayes.write("##FORMAT=<ID=GL,Number=G,Type=Float,Description=\"Genotype Likelihood, log10-scaled likelihoods of the data given the called genotype for each possible genotype generated from the reference and alternate alleles given the sample ploidy\">\n")
            freebayes.write("##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality, the Phred-scaled marginal (or unconditional) probability of the called genotype\">\n")
            freebayes.write("##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n")
            freebayes.write("##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=\"Minimum depth in gVCF output block.\">\n")
            freebayes.write("##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n")
            freebayes.write("##FORMAT=<ID=QA,Number=A,Type=Integer,Description=\"Sum of quality of the alternate observations\">\n")
            freebayes.write("##FORMAT=<ID=QR,Number=1,Type=Integer,Description=\"Sum of quality of the reference observations\">\n")
            freebayes.write("##FORMAT=<ID=RO,Number=1,Type=Integer,Description=\"Reference allele observation count\">\n")
            freebayes.write("##INFO=<ID=AB,Number=A,Type=Float,Description=\"Allele balance at heterozygous sites: a number between 0 and 1 representing the ratio of reads showing the reference allele to all reads, considering only reads from individuals called as heterozygous\">\n")
            freebayes.write("##INFO=<ID=ABP,Number=A,Type=Float,Description=\"Allele balance probability at heterozygous sites: Phred-scaled upper-bounds estimate of the probability of observing the deviation between ABR and ABA given E(ABR/ABA) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Total number of alternate alleles in called genotypes\">\n")
            freebayes.write("##INFO=<ID=AF,Number=A,Type=Float,Description=\"Estimated allele frequency in the range (0,1]\">\n")
            freebayes.write("##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n")
            freebayes.write("##INFO=<ID=AO,Number=A,Type=Integer,Description=\"Count of full observations of this alternate haplotype.\">\n")
            freebayes.write("##INFO=<ID=CIGAR,Number=A,Type=String,Description=\"The extended CIGAR representation of each alternate allele, with the exception that \'=\' is replaced by \'M\' to ease VCF parsing.  Note that INDEL alleles do not have the first matched base (which is provided by default, per the spec) referred to by the CIGAR.\">\n")
            freebayes.write("##INFO=<ID=DECOMPOSED,Number=0,Type=Flag,Description=\"The allele was parsed using vcfallelicprimitives.\">\n")
            freebayes.write("##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Total read depth at the locus\">\n")
            freebayes.write("##INFO=<ID=DPB,Number=1,Type=Float,Description=\"Total read depth per bp at the locus; bases in reads overlapping / bases in haplotype\">\n")
            freebayes.write("##INFO=<ID=DPRA,Number=A,Type=Float,Description=\"Alternate allele depth ratio.  Ratio between depth in samples with each called alternate allele and those without.\">\n")
            freebayes.write("##INFO=<ID=END,Number=1,Type=Integer,Description=\"Last position (inclusive) in gVCF output record.\">\n")
            freebayes.write("##INFO=<ID=EPP,Number=A,Type=Float,Description=\"End Placement Probability: Phred-scaled upper-bounds estimate of the probability of observing the deviation between EL and ER given E(EL/ER) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=EPPR,Number=1,Type=Float,Description=\"End Placement Probability for reference observations: Phred-scaled upper-bounds estimate of the probability of observing the deviation between EL and ER given E(EL/ER) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=GTI,Number=1,Type=Integer,Description=\"Number of genotyping iterations required to reach convergence or bailout.\">\n")
            freebayes.write("##INFO=<ID=LEN,Number=A,Type=Integer,Description=\"allele length\">\n")
            freebayes.write("##INFO=<ID=MEANALT,Number=A,Type=Float,Description=\"Mean number of unique non-reference allele observations per sample with the corresponding alternate alleles.\">\n")
            freebayes.write("##INFO=<ID=MIN_DP,Number=1,Type=Integer,Description=\"Minimum depth in gVCF output block.\">\n")
            freebayes.write("##INFO=<ID=MQM,Number=A,Type=Float,Description=\"Mean mapping quality of observed alternate alleles\">\n")
            freebayes.write("##INFO=<ID=MQMR,Number=1,Type=Float,Description=\"Mean mapping quality of observed reference alleles\">\n")
            freebayes.write("##INFO=<ID=NS,Number=1,Type=Integer,Description=\"Number of samples with data\">\n")
            freebayes.write("##INFO=<ID=NUMALT,Number=1,Type=Integer,Description=\"Number of unique non-reference alleles in called genotypes at this position.\">\n")
            freebayes.write("##INFO=<ID=ODDS,Number=1,Type=Float,Description=\"The log odds ratio of the best genotype combination to the second-best.\">\n")
            freebayes.write("##INFO=<ID=OLD_VARIANT,Number=.,Type=String,Description=\"Original chr:pos:ref:alt encoding\">\n")
            freebayes.write("##INFO=<ID=PAIRED,Number=A,Type=Float,Description=\"Proportion of observed alternate alleles which are supported by properly paired read fragments\">\n")
            freebayes.write("##INFO=<ID=PAIREDR,Number=1,Type=Float,Description=\"Proportion of observed reference alleles which are supported by properly paired read fragments\">\n")
            freebayes.write("##INFO=<ID=PAO,Number=A,Type=Float,Description=\"Alternate allele observations, with partial observations recorded fractionally\">\n")
            freebayes.write("##INFO=<ID=PQA,Number=A,Type=Float,Description=\"Alternate allele quality sum in phred for partial observations\">\n")
            freebayes.write("##INFO=<ID=PQR,Number=1,Type=Float,Description=\"Reference allele quality sum in phred for partial observations\">\n")
            freebayes.write("##INFO=<ID=PRO,Number=1,Type=Float,Description=\"Reference allele observation count, with partial observations recorded fractionally\">\n")
            freebayes.write("##INFO=<ID=QA,Number=A,Type=Integer,Description=\"Alternate allele quality sum in phred\">\n")
            freebayes.write("##INFO=<ID=QR,Number=1,Type=Integer,Description=\"Reference allele quality sum in phred\">\n")
            freebayes.write("##INFO=<ID=RO,Number=1,Type=Integer,Description=\"Count of full observations of the reference haplotype.\">\n")
            freebayes.write("##INFO=<ID=RPL,Number=A,Type=Float,Description=\"Reads Placed Left: number of reads supporting the alternate balanced to the left (5\') of the alternate allele\">\n")
            freebayes.write("##INFO=<ID=RPP,Number=A,Type=Float,Description=\"Read Placement Probability: Phred-scaled upper-bounds estimate of the probability of observing the deviation between RPL and RPR given E(RPL/RPR) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=RPPR,Number=1,Type=Float,Description=\"Read Placement Probability for reference observations: Phred-scaled upper-bounds estimate of the probability of observing the deviation between RPL and RPR given E(RPL/RPR) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=RPR,Number=A,Type=Float,Description=\"Reads Placed Right: number of reads supporting the alternate balanced to the right (3\') of the alternate allele\">\n")
            freebayes.write("##INFO=<ID=RUN,Number=A,Type=Integer,Description=\"Run length: the number of consecutive repeats of the alternate allele in the reference genome\">\n")
            freebayes.write("##INFO=<ID=SAF,Number=A,Type=Integer,Description=\"Number of alternate observations on the forward strand\">\n")
            freebayes.write("##INFO=<ID=SAP,Number=A,Type=Float,Description=\"Strand balance probability for the alternate allele: Phred-scaled upper-bounds estimate of the probability of observing the deviation between SAF and SAR given E(SAF/SAR) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=SAR,Number=A,Type=Integer,Description=\"Number of alternate observations on the reverse strand\">\n")
            freebayes.write("##INFO=<ID=SRF,Number=1,Type=Integer,Description=\"Number of reference observations on the forward strand\">\n")
            freebayes.write("##INFO=<ID=SRP,Number=1,Type=Float,Description=\"Strand balance probability for the reference allele: Phred-scaled upper-bounds estimate of the probability of observing the deviation between SRF and SRR given E(SRF/SRR) ~ 0.5, derived using Hoeffding\'s inequality\">\n")
            freebayes.write("##INFO=<ID=SRR,Number=1,Type=Integer,Description=\"Number of reference observations on the reverse strand\">\n")
            freebayes.write("##INFO=<ID=TYPE,Number=A,Type=String,Description=\"The type of allele, either snp, mnp, ins, del, or complex.\">\n")
            freebayes.write("##INFO=<ID=technology.illumina,Number=A,Type=Float,Description=\"Fraction of observations supporting the alternate observed in reads from illumina\">\n")
            freebayes.write("##bcftools_filterCommand=filter -i \'ALT=\"<*>\" || QUAL > 5\'; Date=Fri May 17 00:58:50 2019\n")
            freebayes.write("##bcftools_filterVersion=1.6+htslib-1.6\n")
            freebayes.write("##bcftools_viewCommand=view -a -; Date=Fri May 17 00:59:54 2019\n")
            freebayes.write("##bcftools_viewVersion=1.6+htslib-1.6\n")
            freebayes.write("##commandline=\"/sw/pipelines/bcbio-nextgen/1.0.5/anaconda/bin/freebayes -f /data/ref_genomes/bcbio-nextgen/sam/hg19.with.mt.fasta --genotype-qualities --strict-vcf --ploidy 2 --targets /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/freebayes/chr1/15-883_1-chr1_0_16174667-regions.bed --min-repeat-entropy 1 --no-partial-observations --min-alternate-fraction 0.01 --pooled-discrete --pooled-continuous --report-genotype-likelihood-max --allele-balance-priors-off -b /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/bamprep/15-883_1/chr1/15-883_1-sort-cumi-recal-chr1_0_16174667-prep.bam\"\n")
            freebayes.write("##contig=<ID=chr1,length=249250621>\n")
            freebayes.write("##contig=<ID=chr2,length=243199373>\n")
            freebayes.write("##contig=<ID=chr3,length=198022430>\n")
            freebayes.write("##contig=<ID=chr4,length=191154276>\n")
            freebayes.write("##contig=<ID=chr5,length=180915260>\n")
            freebayes.write("##contig=<ID=chr6,length=171115067>\n")
            freebayes.write("##contig=<ID=chr7,length=159138663>\n")
            freebayes.write("##contig=<ID=chr8,length=146364022>\n")
            freebayes.write("##contig=<ID=chr9,length=141213431>\n")
            freebayes.write("##contig=<ID=chr10,length=135534747>\n")
            freebayes.write("##contig=<ID=chr11,length=135006516>\n")
            freebayes.write("##contig=<ID=chr12,length=133851895>\n")
            freebayes.write("##contig=<ID=chr13,length=115169878>\n")
            freebayes.write("##contig=<ID=chr14,length=107349540>\n")
            freebayes.write("##contig=<ID=chr15,length=102531392>\n")
            freebayes.write("##contig=<ID=chr16,length=90354753>\n")
            freebayes.write("##contig=<ID=chr17,length=81195210>\n")
            freebayes.write("##contig=<ID=chr18,length=78077248>\n")
            freebayes.write("##contig=<ID=chr19,length=59128983>\n")
            freebayes.write("##contig=<ID=chr20,length=63025520>\n")
            freebayes.write("##contig=<ID=chr21,length=48129895>\n")
            freebayes.write("##contig=<ID=chr22,length=51304566>\n")
            freebayes.write("##contig=<ID=chrX,length=155270560>\n")
            freebayes.write("##contig=<ID=chrY,length=59373566>\n")
            freebayes.write("##contig=<ID=chrM,length=16571>\n")
            freebayes.write("##fileDate=20190517\n")
            freebayes.write("##phasing=none\n")
            freebayes.write("##reference=/data/ref_genomes/bcbio-nextgen/sam/hg19.with.mt.fasta\n")
            freebayes.write("##source=freeBayes v1.1.0-46-g8d2b3a0-dirty\n")
            freebayes.write("##SnpEffVersion=\"4.3i (build 2016-12-15 22:33), by Pablo Cingolani\"\n")
            freebayes.write("##SnpEffCmd=\"SnpEff  -cancer -i vcf -o vcf -csvStats /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/freebayes/15-883_1-effects-stats.csv -s /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/freebayes/15-883_1-effects-stats.html GRCh37.75 /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/freebayes/15-883_1.vcf.gz \"\n")
            freebayes.write("##INFO=<ID=ANN,Number=.,Type=String,Description=\"Functional annotations: \'Allele | Annotation | Annotation_Impact | Gene_Name | Gene_ID | Feature_Type | Feature_ID | Transcript_BioType | Rank | HGVS.c | HGVS.p | cDNA.pos / cDNA.length | CDS.pos / CDS.length | AA.pos / AA.length | Distance | ERRORS / WARNINGS / INFO\'\">\n")
            freebayes.write("##INFO=<ID=LOF,Number=.,Type=String,Description=\"Predicted loss of function effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            freebayes.write("##INFO=<ID=NMD,Number=.,Type=String,Description=\"Predicted nonsense mediated decay effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            freebayes.write("##SAMPLE=<ID=15-883_1,Genomes=Tumor>\n")
            freebayes.write("##bcftools_viewCommand=view; Date=Fri May 17 03:04:43 2019\n")
            freebayes.write("##FILTER=<ID=FBQualDepth,Description=\"Set if true: (AF[0] <= 0.5 && (DP < 4 || (DP < 13 && %QUAL < 10))) || (AF[0] > 0.5 && (DP < 4 && %QUAL < 50))\">\n")
            freebayes.write("##bcftools_filterCommand=filter -O v -T /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/bedprep/TST500C_manifest.bed.gz --soft-filter FBQualDepth -e \'(AF[0] <= 0.5 && (DP < 4 || (DP < 13 && %QUAL < 10))) || (AF[0] > 0.5 && (DP < 4 && %QUAL < 50))\' -m + /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/freebayes/15-883_1-effects-annotated.vcf.gz;Date=Fri May 17 03:04:44 2019\n")
            freebayes.write("#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	15-883_1)\n")
            freebayes.write("chr1\t4367323\trs1490413\tG\tA\t17541.5\tPASS\tAB=0.631095;ABP=165.271;AC=1;AF=0.5;AN=2;AO=686;CIGAR=1X;DP=1087;DPB=1087;DPRA=0;EPP=22.2687;EPPR=12.1132;GTI=0;LEN=1;MEANALT=1;MQM=60;MQMR=59.9825;NS=1;NUMALT=1;ODDS=2232.08;PAIRED=1;PAIREDR=1;PAO=0;PQA=0;PQR=0;PRO=0;QA=23271;QR=14509;RO=401;RPL=400;RPP=44.148;RPPR=19.3911;RPR=286;RUN=1;SAF=342;SAP=3.02296;SAR=344;SRF=194;SRP=3.92546;SRR=207;TYPE=snp;technology.illumina=1;ANN=A|intergenic_region|MODIFIER|RP11-374C13.1-RP5-1166F10.1|ENSG00000229280-ENSG00000235054|intergenic_region|ENSG00000229280-ENSG00000235054|||n.4367323G>A||||||\tGT:GQ:DP:AD:RO:QR:AO:QA:GL\t0/1:133:1087:401,686:401:14509:686:23271:-1766.75,0,-978.22\n")

        tabix_index(os.path.join(self.tempdir,"freebayes.vcf"), preset="vcf")

        with open(os.path.join(self.tempdir,"mutect2.vcf"),"w", encoding="ascii") as mutect2:
            mutect2.write("##fileformat=VCFv4.2\n")
            mutect2.write("##FILTER=<ID=PASS,Description=\"All filters passed\">\n")
            mutect2.write("##FILTER=<ID=alt_allele_in_normal,Description=\"Evidence seen in the normal sample\">\n")
            mutect2.write("##FILTER=<ID=clustered_events,Description=\"Clustered events observed in the tumor\">\n")
            mutect2.write("##FILTER=<ID=clustered_read_position,Description=\"Evidence for somatic variant clusters near the ends of reads\">\n")
            mutect2.write("#FILTER=<ID=germline_risk,Description=\"Evidence indicates this site is germline, not somatic\">\n")
            mutect2.write("##FILTER=<ID=homologous_mapping_event,Description=\"More than three events were observed in the tumor\">\n")
            mutect2.write("##FILTER=<ID=multi_event_alt_allele_in_normal,Description=\"Multiple events observed in tumor and normal\">\n")
            mutect2.write("##FILTER=<ID=panel_of_normals,Description=\"Seen in at least 2 samples in the panel of normals\">\n")
            mutect2.write("##FILTER=<ID=str_contraction,Description=\"Site filtered due to contraction of short tandem repeat region\">\n")
            mutect2.write("##FILTER=<ID=strand_artifact,Description=\"Evidence for alt allele comes from one read direction only\">\n")
            mutect2.write("##FILTER=<ID=t_lod_fstar,Description=\"Tumor does not meet likelihood threshold\">\n")
            mutect2.write("##FILTER=<ID=triallelic_site,Description=\"Site filtered because more than two alt alleles pass tumor LOD\">\n")
            mutect2.write("##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\n")
            mutect2.write("##FORMAT=<ID=AF,Number=1,Type=Float,Description=\"Allele fraction of the event in the tumor\">\n")
            mutect2.write("##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Approximate read depth (reads with MQ=255 or with bad mates are filtered)\">\n")
            mutect2.write("##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality\">\n")
            mutect2.write("##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n")
            mutect2.write("##FORMAT=<ID=PGT,Number=1,Type=String,Description=\"Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another\">\n")
            mutect2.write("##FORMAT=<ID=PID,Number=1,Type=String,Description=\"Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group\">\n")
            mutect2.write("##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n")
            mutect2.write("##GATKCommandLine.MuTect2=<ID=MuTect2,Version=3.8-0-ge9d806836,Date=\"Fri May 17 00:31:36 CEST 2019\",Epoch=1558045896355,CommandLineOptions=\"analysis_type=MuTect2 input_file=[/gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/bamprep/15-883_1/chr1/15-883_1-sort-cumi-recal-chr1_0_16174667-prep.bam] showFullBamList=false read_buffer_size=null read_filter=[BadCigar, NotPrimaryAlignment] disable_read_filter=[DuplicateRead] intervals=[/gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/mutect2/chr1/15-883_1-chr1_0_16174667-regions.bed] excludeIntervals=null interval_set_rule=INTERSECTION interval_merging=ALL interval_padding=0 reference_sequence=/data/ref_genomes/bcbio-nextgen/sam/hg19.with.mt.fasta nonDeterministicRandomSeed=false disableDithering=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 baq=OFF baqGapOpenPenalty=40.0 refactor_NDN_cigar_string=false fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false useOriginalQualities=false defaultBaseQualities=-1 performanceLog=null BQSR=null quantize_quals=0 static_quantized_quals=null round_down_quantized=false disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 globalQScorePrior=-1.0 secondsBetweenProgressUpdates=10 validation_strictness=SILENT remove_program_records=false keep_program_records=false sample_rename_mapping_file=null unsafe=LENIENT_VCF_PROCESSING use_jdk_deflater=false use_jdk_inflater=false disable_auto_index_creation_and_locking_when_reading_rods=false no_cmdline_in_header=false sites_only=false never_trim_vcf_format_field=false bcf=false bam_compression=null simplifyBAM=false disable_bam_indexing=false generate_md5=false num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false variant_index_type=DYNAMIC_SEEK variant_index_parameter=-1 reference_window_stop=0 phone_home= gatk_key=null tag=NA logging_level=INFO log_to_file=null help=false version=false cosmic=[] normal_panel=[] dbsnp=(RodBinding name= source=UNBOUND) m2debug=false artifact_detection_mode=false initial_tumor_lod=4.0 initial_normal_lod=0.5 tumor_lod=6.3 normal_lod=2.2 dbsnp_normal_lod=5.5 max_alt_alleles_in_normal_count=1 max_alt_alleles_in_normal_qscore_sum=20 max_alt_allele_in_normal_fraction=0.03 power_constant_qscore=30 strand_artifact_lod=2.0 strand_artifact_power_threshold=0.9 enable_strand_artifact_filter=false enable_clustered_read_position_filter=false pir_median_threshold=10.0 pir_mad_threshold=3.0 debug=false useFilteredReadsForAnnotations=false emitRefConfidence=NONE bamOutput=null bamWriterType=CALLED_HAPLOTYPES emitDroppedReads=false disableOptimizations=false annotateNDA=false useNewAFCalculator=false heterozygosity=0.001 indel_heterozygosity=1.25E-4 heterozygosity_stdev=0.01 standard_min_confidence_threshold_for_calling=10.0 standard_min_confidence_threshold_for_emitting=30.0 max_alternate_alleles=6 max_genotype_count=1024 max_num_PL_values=100 input_prior=[] sample_ploidy=2 genotyping_mode=DISCOVERY alleles=(RodBinding name= source=UNBOUND) contamination_fraction_to_filter=0.0 contamination_fraction_per_sample_file=null p_nonref_model=null exactcallslog=null output_mode=EMIT_VARIANTS_ONLY allSitePLs=false kmerSize=[10, 25] dontIncreaseKmerSizesForCycles=false allowNonUniqueKmersInRef=false numPruningSamples=1 recoverDanglingHeads=false doNotRecoverDanglingBranches=false minDanglingBranchLength=4 consensus=false maxNumHaplotypesInPopulation=128 errorCorrectKmers=false minPruning=2 debugGraphTransformations=false allowCyclesInKmerGraphToGeneratePaths=false graphOutput=null kmerLengthForReadErrorCorrection=25 minObservationsForKmerToBeSolid=20 gcpHMM=10 pair_hmm_implementation=FASTEST_AVAILABLE phredScaledGlobalReadMismappingRate=45 noFpga=false nativePairHmmThreads=1 useDoublePrecision=false debug_read_name=null MQ_filtering_level=20 comp=[] annotation=[ClippingRankSumTest, DepthPerSampleHC, MappingQualityRankSumTest, MappingQualityZero, QualByDepth, ReadPosRankSumTest, RMSMappingQuality, FisherStrand, GCContent, HaplotypeScore, HomopolymerRun, DepthPerAlleleBySample, Coverage] excludeAnnotation=[SpanningDeletions] out=(Stream) dontTrimActiveRegions=false maxDiscARExtension=25 maxGGAARExtension=300 paddingAroundIndels=150 paddingAroundSNPs=20 keepRG=null min_base_quality_score=10 errorCorrectReads=false captureAssemblyFailureBAM=false dontUseSoftClippedBases=false justDetermineActiveRegions=false doNotRunPhysicalPhasing=false maxReadsInRegionPerSample=1000 minReadsPerAlignmentStart=5 activityProfileOut=null activeRegionOut=null activeRegionIn=null activeRegionExtension=null forceActive=false activeRegionMaxSize=null bandPassSigma=null maxReadsInMemoryPerSample=30000 maxTotalReadsInMemory=10000000 maxProbPropagationDistance=50 activeProbabilityThreshold=0.002 filter_reads_with_N_cigar=false filter_mismatching_base_and_quals=false filter_bases_not_stored=false\">\n")
            mutect2.write("##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=\"Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases\">\n")
            mutect2.write("##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Approximate read depth; some reads may have been filtered\">\n")
            mutect2.write("##INFO=<ID=ECNT,Number=1,Type=String,Description=\"Number of events in this haplotype\">\n")
            mutect2.write("##INFO=<ID=FS,Number=1,Type=Float,Description=\"Phred-scaled p-value using Fisher\'s exact test to detect strand bias\">\n")
            mutect2.write("##INFO=<ID=GC,Number=1,Type=Float,Description=\"GC content around the variant (see docs for window size details)\">\n")
            mutect2.write("##INFO=<ID=HCNT,Number=1,Type=String,Description=\"Number of haplotypes that support this variant\">\n")
            mutect2.write("##INFO=<ID=HRun,Number=1,Type=Integer,Description=\"Largest Contiguous Homopolymer Run of Variant Allele In Either Direction\">\n")
            mutect2.write("##INFO=<ID=HaplotypeScore,Number=1,Type=Float,Description=\"Consistency of the site with at most two segregating haplotypes\">\n")
            mutect2.write("##INFO=<ID=MAX_ED,Number=1,Type=Integer,Description=\"Maximum distance between events in this active region\">\n")
            mutect2.write("##INFO=<ID=MIN_ED,Number=1,Type=Integer,Description=\"Minimum distance between events in this active region\">\n")
            mutect2.write("##INFO=<ID=MQ,Number=1,Type=Float,Description=\"RMS Mapping Quality\">\n")
            mutect2.write("##INFO=<ID=MQ0,Number=1,Type=Integer,Description=\"Total Mapping Quality Zero Reads\">\n")
            mutect2.write("##INFO=<ID=MQRankSum,Number=1,Type=Float,Description=\"Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities\">\n")
            mutect2.write("##INFO=<ID=NLOD,Number=1,Type=String,Description=\"Normal LOD score\">\n")
            mutect2.write("##INFO=<ID=PON,Number=1,Type=String,Description=\"Count from Panel of Normals\">\n")
            mutect2.write("##INFO=<ID=QD,Number=1,Type=Float,Description=\"Variant Confidence/Quality by Depth\">\n")
            mutect2.write("##INFO=<ID=ReadPosRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt vs. Ref read position bias\">\n")
            mutect2.write("##INFO=<ID=TLOD,Number=1,Type=String,Description=\"Tumor LOD score\">\n")
            mutect2.write("##contig=<ID=chr1,length=249250621,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr2,length=243199373,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr3,length=198022430,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr4,length=191154276,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr5,length=180915260,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr6,length=171115067,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr7,length=159138663,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr8,length=146364022,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr9,length=141213431,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr10,length=135534747,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr11,length=135006516,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr12,length=133851895,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr13,length=115169878,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr14,length=107349540,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr15,length=102531392,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr16,length=90354753,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr17,length=81195210,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr18,length=78077248,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr19,length=59128983,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr20,length=63025520,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr21,length=48129895,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chr22,length=51304566,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chrX,length=155270560,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chrY,length=59373566,assembly=hg19>\n")
            mutect2.write("##contig=<ID=chrM,length=16571,assembly=hg19>\n")
            mutect2.write("##reference=file:///data/ref_genomes/bcbio-nextgen/sam/hg19.with.mt.fasta\n")
            mutect2.write("##SnpEffVersion=\"4.3i (build 2016-12-15 22:33), by Pablo Cingolani\"\n")
            mutect2.write("##SnpEffCmd=\"SnpEff  -cancer -i vcf -o vcf -csvStats /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/mutect2/15-883_1-effects-stats.csv -s /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/mutect2/15-883_1-effects-stats.html GRCh37.75 /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/mutect2/15-883_1.vcf.gz \"\n")
            mutect2.write("##INFO=<ID=ANN,Number=.,Type=String,Description=\"Functional annotations: \'Allele | Annotation | Annotation_Impact | Gene_Name | Gene_ID | Feature_Type | Feature_ID | Transcript_BioType | Rank | HGVS.c | HGVS.p | cDNA.pos / cDNA.length | CDS.pos / CDS.length | AA.pos / AA.length | Distance | ERRORS / WARNINGS / INFO\'\">\n")
            mutect2.write("##INFO=<ID=LOF,Number=.,Type=String,Description=\"Predicted loss of function effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            mutect2.write("##INFO=<ID=NMD,Number=.,Type=String,Description=\"Predicted nonsense mediated decay effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            mutect2.write("##SAMPLE=<ID=15-883_1,Genomes=Tumor>\n")
            mutect2.write("##bcftools_viewVersion=1.6+htslib-1.6\n")
            mutect2.write("##bcftools_viewCommand=view; Date=Fri May 17 03:04:39 2019\n")
            mutect2.write("#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	15-883_1\n")
            mutect2.write("chr1\t4367323\trs1490413\tG\tA\t.\tPASS\tClippingRankSum=0;DP=1080;ECNT=1;FS=0.539;HCNT=5;MAX_ED=.;MIN_ED=.;MQ=60;MQ0=0;MQRankSum=0;ReadPosRankSum=-1.33;TLOD=1423.58;ANN=A|intergenic_region|MODIFIER|RP11-374C13.1-RP5-1166F10.1|ENSG00000229280-ENSG00000235054|intergenic_region|ENSG00000229280-ENSG00000235054|||n.4367323G>A||||||\tGT:AD:AF:DP\t0/1:399,680:0.637:1079\n")


        tabix_index(os.path.join(self.tempdir,"mutect2.vcf"), preset="vcf")

        with open(os.path.join(self.tempdir,"vardict.vcf"),"w", encoding="ascii") as vardict:
            vardict.write("##fileformat=VCFv4.2\n")
            vardict.write("##FILTER=<ID=PASS,Description=\"All filters passed\">\n")
            vardict.write("##FILTER=<ID=AMPBIAS,Description=\"Indicate the variant has amplicon bias.\">\n")
            vardict.write("##FILTER=<ID=Bias,Description=\"Strand Bias\">\n")
            vardict.write("##FILTER=<ID=Cluster0bp,Description=\"Two variants are within 0 bp\">\n")
            vardict.write("##FILTER=<ID=InGap,Description=\"The variant is in the deletion gap, thus likely false positive\">\n")
            vardict.write("##FILTER=<ID=InIns,Description=\"The variant is adjacent to an insertion variant\">\n")
            vardict.write("##FILTER=<ID=LongMSI,Description=\"The somatic variant is flanked by long A/T (>=14)\">\n")
            vardict.write("##FILTER=<ID=MSI12,Description=\"Variant in MSI region with 12 non-monomer MSI or 13 monomer MSI\">\n")
            vardict.write("##FILTER=<ID=NM5.25,Description=\"Mean mismatches in reads >= 5.25, thus likely false positive\">\n")
            vardict.write("##FILTER=<ID=Q10,Description=\"Mean Mapping Quality Below 10\">\n")
            vardict.write("##FILTER=<ID=SN1.5,Description=\"Signal to Noise Less than 1.5\">\n")
            vardict.write("##FILTER=<ID=d3,Description=\"Total Depth < 3\">\n")
            vardict.write("##FILTER=<ID=f0.01,Description=\"Allele frequency < 0.01\">\n")
            vardict.write("##FILTER=<ID=p8,Description=\"Mean Position in Reads Less than 8\">\n")
            vardict.write("##FILTER=<ID=pSTD,Description=\"Position in Reads has STD of 0\">\n")
            vardict.write("##FILTER=<ID=q22.5,Description=\"Mean Base Quality Below 22.5\">\n")
            vardict.write("##FILTER=<ID=v2,Description=\"Var Depth < 2\">\n")
            vardict.write("##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\n")
            vardict.write("##FORMAT=<ID=AF,Number=1,Type=Float,Description=\"Allele Frequency\">\n")
            vardict.write("##FORMAT=<ID=ALD,Number=2,Type=Integer,Description=\"Variant forward, reverse reads\">\n")
            vardict.write("##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Total Depth\">\n")
            vardict.write("##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n")
            vardict.write("##FORMAT=<ID=RD,Number=2,Type=Integer,Description=\"Reference forward, reverse reads\">\n")
            vardict.write("##FORMAT=<ID=VD,Number=1,Type=Integer,Description=\"Variant Depth\">\n")
            vardict.write("##INFO=<ID=ADJAF,Number=1,Type=Float,Description=\"Adjusted AF for indels due to local realignment\">\n")
            vardict.write("##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele Frequency, for each ALT allele, in the same order as listed\">\n")
            vardict.write("##INFO=<ID=AMPFLAG,Number=1,Type=Integer,Description=\"Top variant in amplicons don\'t match\">\n")
            vardict.write("##INFO=<ID=BIAS,Number=1,Type=String,Description=\"Strand Bias Info\">\n")
            vardict.write("##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Total Depth\">\n")
            vardict.write("##INFO=<ID=DUPRATE,Number=1,Type=Float,Description=\"Duplication rate in fraction\">\n")
            vardict.write("##INFO=<ID=END,Number=1,Type=Integer,Description=\"Chr End Position\">\n")
            vardict.write("##INFO=<ID=GDAMP,Number=1,Type=Integer,Description=\"No. of amplicons supporting variant\">\n")
            vardict.write("##INFO=<ID=HIAF,Number=1,Type=Float,Description=\"Allele frequency using only high quality bases\">\n")
            vardict.write("##INFO=<ID=HICNT,Number=1,Type=Integer,Description=\"High quality variant reads\">\n")
            vardict.write("##INFO=<ID=HICOV,Number=1,Type=Integer,Description=\"High quality total reads\">\n")
            vardict.write("##INFO=<ID=LSEQ,Number=1,Type=String,Description=\"5\' flanking seq\">\n")
            vardict.write("##INFO=<ID=MQ,Number=1,Type=Float,Description=\"Mean Mapping Quality\">\n")
            vardict.write("##INFO=<ID=MSI,Number=1,Type=Float,Description=\"MicroSatellite. > 1 indicates MSI\">\n")
            vardict.write("##INFO=<ID=MSILEN,Number=1,Type=Float,Description=\"MicroSatellite unit length in bp\">\n")
            vardict.write("##INFO=<ID=NCAMP,Number=1,Type=Integer,Description=\"No. of amplicons don\'t work\">\n")
            vardict.write("##INFO=<ID=NM,Number=1,Type=Float,Description=\"Mean mismatches in reads\">\n")
            vardict.write("##INFO=<ID=ODDRATIO,Number=1,Type=Float,Description=\"Strand Bias Odds ratio\">\n")
            vardict.write("##INFO=<ID=PMEAN,Number=1,Type=Float,Description=\"Mean position in reads\">\n")
            vardict.write("##INFO=<ID=PSTD,Number=1,Type=Float,Description=\"Position STD in reads\">\n")
            vardict.write("##INFO=<ID=QSTD,Number=1,Type=Float,Description=\"Quality score STD in reads\">\n")
            vardict.write("##INFO=<ID=QUAL,Number=1,Type=Float,Description=\"Mean quality score in reads\">\n")
            vardict.write("##INFO=<ID=REFBIAS,Number=1,Type=String,Description=\"Reference depth by strand\">\n")
            vardict.write("##INFO=<ID=RSEQ,Number=1,Type=String,Description=\"3\' flanking seq\">\n")
            vardict.write("##INFO=<ID=SAMPLE,Number=1,Type=String,Description=\"Sample name (with whitespace translated to underscores)\">\n")
            vardict.write("##INFO=<ID=SBF,Number=1,Type=Float,Description=\"Strand Bias Fisher p-value\">\n")
            vardict.write("##INFO=<ID=SHIFT3,Number=1,Type=Integer,Description=\"No. of bases to be shifted to 3 prime for deletions due to alternative alignment\">\n")
            vardict.write("##INFO=<ID=SN,Number=1,Type=Float,Description=\"Signal to noise\">\n")
            vardict.write("##INFO=<ID=SPANPAIR,Number=1,Type=Integer,Description=\"No. of pairs supporting SV\">\n")
            vardict.write("##INFO=<ID=SPLITREAD,Number=1,Type=Integer,Description=\"No. of split reads supporting SV\">\n")
            vardict.write("##INFO=<ID=TLAMP,Number=1,Type=Integer,Description=\"Total of amplicons covering variant\">\n")
            vardict.write("##INFO=<ID=TYPE,Number=1,Type=String,Description=\"Variant Type: SNV Insertion Deletion Complex\">\n")
            vardict.write("##INFO=<ID=VARBIAS,Number=1,Type=String,Description=\"Variant depth by strand\">\n")
            vardict.write("##INFO=<ID=VD,Number=1,Type=Integer,Description=\"Variant Depth\">\n")
            vardict.write("##bcftools_filterCommand=filter -i \'QUAL >= 0\'; Date=Fri May 17 00:48:23 2019\n")
            vardict.write("##bcftools_filterVersion=1.6+htslib-1.6\n")
            vardict.write("##contig=<ID=chr1,length=249250621>\n")
            vardict.write("##contig=<ID=chr2,length=243199373>\n")
            vardict.write("##contig=<ID=chr3,length=198022430>\n")
            vardict.write("##contig=<ID=chr4,length=191154276>\n")
            vardict.write("##contig=<ID=chr5,length=180915260>\n")
            vardict.write("##contig=<ID=chr6,length=171115067>\n")
            vardict.write("##contig=<ID=chr7,length=159138663>\n")
            vardict.write("##contig=<ID=chr8,length=146364022>\n")
            vardict.write("##contig=<ID=chr9,length=141213431>\n")
            vardict.write("##contig=<ID=chr10,length=135534747>\n")
            vardict.write("##contig=<ID=chr11,length=135006516>\n")
            vardict.write("##contig=<ID=chr12,length=133851895>\n")
            vardict.write("##contig=<ID=chr13,length=115169878>\n")
            vardict.write("##contig=<ID=chr14,length=107349540>\n")
            vardict.write("##contig=<ID=chr15,length=102531392>\n")
            vardict.write("##contig=<ID=chr16,length=90354753>\n")
            vardict.write("##contig=<ID=chr17,length=81195210>\n")
            vardict.write("##contig=<ID=chr18,length=78077248>\n")
            vardict.write("##contig=<ID=chr19,length=59128983>\n")
            vardict.write("##contig=<ID=chr20,length=63025520>\n")
            vardict.write("##contig=<ID=chr21,length=48129895>\n")
            vardict.write("##contig=<ID=chr22,length=51304566>\n")
            vardict.write("##contig=<ID=chrX,length=155270560>\n")
            vardict.write("##contig=<ID=chrY,length=59373566>\n")
            vardict.write("##contig=<ID=chrM,length=16571>\n")
            vardict.write("##SnpEffVersion=\"4.3i (build 2016-12-15 22:33), by Pablo Cingolani\"\n")
            vardict.write("##SnpEffCmd=\"SnpEff  -cancer -i vcf -o vcf -csvStats /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/vardict/15-883_1-effects-stats.csv -s /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/vardict/15-883_1-effects-stats.html GRCh37.75 /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/vardict/15-883_1.vcf.gz \"\n")
            vardict.write("##INFO=<ID=ANN,Number=.,Type=String,Description=\"Functional annotations: \'Allele | Annotation | Annotation_Impact | Gene_Name | Gene_ID | Feature_Type | Feature_ID | Transcript_BioType | Rank | HGVS.c | HGVS.p | cDNA.pos / cDNA.length | CDS.pos / CDS.length | AA.pos / AA.length | Distance | ERRORS / WARNINGS / INFO\'\">\n")
            vardict.write("##INFO=<ID=LOF,Number=.,Type=String,Description=\"Predicted loss of function effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            vardict.write("##INFO=<ID=NMD,Number=.,Type=String,Description=\"Predicted nonsense mediated decay effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            vardict.write("##SAMPLE=<ID=15-883_1,Genomes=Tumor>\n")
            vardict.write("##bcftools_viewVersion=1.6+htslib-1.6\n")
            vardict.write("##bcftools_viewCommand=view; Date=Fri May 17 03:04:50 2019\n")
            vardict.write("#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	15-883_1\n")
            vardict.write("chr1\t4367323\trs1490413\tG\tA\t296\tPASS\tADJAF=0;AF=0.6347;BIAS=2:2;DP=657;HIAF=0.6352;HICNT=411;HICOV=647;LSEQ=GCTGATGTGGGTTCTTTGCA;MQ=60;MSI=2;MSILEN=1;NM=1.1;ODDRATIO=1.33057;PMEAN=23.1;PSTD=1;QSTD=1;QUAL=34.1;REFBIAS=33:207;RSEQ=AACTGGCTGGCCTCAGAGCA;SAMPLE=15-883_1;SBF=0.22671;SHIFT3=0;SN=68.5;TYPE=SNV;VARBIAS=73:344;VD=417;ANN=A|intergenic_region|MODIFIER|RP11-374C13.1-RP5-1166F10.1|ENSG00000229280-ENSG00000235054|intergenic_region|ENSG00000229280-ENSG00000235054|||n.4367323G>A||||||\tGT:DP:VD:AD:AF:RD:ALD\t1/0:657:417:240,417:0.6347:33,207:73,344\n")


        tabix_index(os.path.join(self.tempdir,"vardict.vcf"), preset="vcf")

        with open(os.path.join(self.tempdir,"varscan.vcf"),"w", encoding="ascii") as varscan:
            varscan.write("##fileformat=VCFv4.2\n")
            varscan.write("##FILTER=<ID=PASS,Description=\"All filters passed\">\n")
            varscan.write("##FILTER=<ID=indelError,Description=\"Likely artifact due to indel reads at this position\">\n")
            varscan.write("##FILTER=<ID=str10,Description=\"Less than 10% or more than 90% of variant supporting reads on one strand\">\n")
            varscan.write("##FORMAT=<ID=ABQ,Number=1,Type=Integer,Description=\"Average quality of variant-supporting bases (qual2)\">\n")
            varscan.write("##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\n")
            varscan.write("##FORMAT=<ID=ADF,Number=1,Type=Integer,Description=\"Depth of variant-supporting bases on forward strand (reads2plus)\">\n")
            varscan.write("##FORMAT=<ID=ADR,Number=1,Type=Integer,Description=\"Depth of variant-supporting bases on reverse strand (reads2minus)\">\n")
            varscan.write("##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Quality Read Depth of bases with Phred score >= 15\">\n")
            varscan.write("##FORMAT=<ID=FREQ,Number=1,Type=Float,Description=\"Variant allele frequency\">\n")
            varscan.write("##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality\">\n")
            varscan.write("##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n")
            varscan.write("##FORMAT=<ID=PVAL,Number=1,Type=String,Description=\"P-value from Fisher\'s Exact Test\">\n")
            varscan.write("##FORMAT=<ID=RBQ,Number=1,Type=Integer,Description=\"Average quality of reference-supporting bases (qual1)\">\n")
            varscan.write("##FORMAT=<ID=RD,Number=1,Type=Integer,Description=\"Depth of reference-supporting bases (reads1)\">\n")
            varscan.write("##FORMAT=<ID=RDF,Number=1,Type=Integer,Description=\"Depth of reference-supporting bases on forward strand (reads1plus)\">\n")
            varscan.write("##FORMAT=<ID=RDR,Number=1,Type=Integer,Description=\"Depth of reference-supporting bases on reverse strand (reads1minus)\">\n")
            varscan.write("##FORMAT=<ID=SDP,Number=1,Type=Integer,Description=\"Raw Read Depth as reported by SAMtools\">\n")
            varscan.write("##INFO=<ID=ADP,Number=1,Type=Integer,Description=\"Average per-sample depth of bases with Phred score >= 15\">\n")
            varscan.write("##INFO=<ID=HET,Number=1,Type=Integer,Description=\"Number of samples called heterozygous-variant\">\n")
            varscan.write("##INFO=<ID=HOM,Number=1,Type=Integer,Description=\"Number of samples called homozygous-variant\">\n")
            varscan.write("##INFO=<ID=NC,Number=1,Type=Integer,Description=\"Number of samples not called\">\n")
            varscan.write("##INFO=<ID=WT,Number=1,Type=Integer,Description=\"Number of samples called reference (wild-type)\">\n")
            varscan.write("##contig=<ID=chr1,length=249250621>\n")
            varscan.write("##contig=<ID=chr2,length=243199373>\n")
            varscan.write("##contig=<ID=chr3,length=198022430>\n")
            varscan.write("##contig=<ID=chr4,length=191154276>\n")
            varscan.write("##contig=<ID=chr5,length=180915260>\n")
            varscan.write("##contig=<ID=chr6,length=171115067>\n")
            varscan.write("##contig=<ID=chr7,length=159138663>\n")
            varscan.write("##contig=<ID=chr8,length=146364022>\n")
            varscan.write("##contig=<ID=chr9,length=141213431>\n")
            varscan.write("##contig=<ID=chr10,length=135534747>\n")
            varscan.write("##contig=<ID=chr11,length=135006516>\n")
            varscan.write("##contig=<ID=chr12,length=133851895>\n")
            varscan.write("##contig=<ID=chr13,length=115169878>\n")
            varscan.write("##contig=<ID=chr14,length=107349540>\n")
            varscan.write("##contig=<ID=chr15,length=102531392>\n")
            varscan.write("##contig=<ID=chr16,length=90354753>\n")
            varscan.write("##contig=<ID=chr17,length=81195210>\n")
            varscan.write("##contig=<ID=chr18,length=78077248>\n")
            varscan.write("##contig=<ID=chr19,length=59128983>\n")
            varscan.write("##contig=<ID=chr20,length=63025520>\n")
            varscan.write("##contig=<ID=chr21,length=48129895>\n")
            varscan.write("##contig=<ID=chr22,length=51304566>\n")
            varscan.write("##contig=<ID=chrX,length=155270560>\n")
            varscan.write("##contig=<ID=chrY,length=59373566>\n")
            varscan.write("##contig=<ID=chrM,length=16571>\n")
            varscan.write("##source=VarScan2\n")
            varscan.write("##SnpEffVersion=\"4.3i (build 2016-12-15 22:33), by Pablo Cingolani\"\n")
            varscan.write("##SnpEffCmd=\"SnpEff  -cancer -i vcf -o vcf -csvStats /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/varscan/15-883_1-effects-stats.csv -s /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/varscan/15-883_1-effects-stats.html GRCh37.75 /gluster-storage-volume/projects/wp1/nobackup/ngs/utveckling/analys/2019/190409_NDX550220_0004_AHTHN2BGX9/varscan/15-883_1.vcf.gz \"\n")
            varscan.write("##INFO=<ID=ANN,Number=.,Type=String,Description=\"Functional annotations: \'Allele | Annotation | Annotation_Impact | Gene_Name | Gene_ID | Feature_Type | Feature_ID | Transcript_BioType | Rank | HGVS.c | HGVS.p | cDNA.pos / cDNA.length | CDS.pos / CDS.length | AA.pos / AA.length | Distance | ERRORS / WARNINGS / INFO\'\">\n")
            varscan.write("##INFO=<ID=LOF,Number=.,Type=String,Description=\"Predicted loss of function effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            varscan.write("##INFO=<ID=NMD,Number=.,Type=String,Description=\"Predicted nonsense mediated decay effects for this variant. Format: \'Gene_Name | Gene_ID | Number_of_transcripts_in_gene | Percent_of_transcripts_affected\'\">\n")
            varscan.write("##SAMPLE=<ID=15-883_1,Genomes=Tumor>\n")
            varscan.write("##bcftools_viewVersion=1.6+htslib-1.6\n")
            varscan.write("##bcftools_viewCommand=view; Date=Fri May 17 03:04:51 2019\n")
            varscan.write("#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	15-883_1\n")
            varscan.write("chr1\t4367323\trs1490413\tG\tA\t0\tPASS\tADP=645;HET=1;HOM=0;NC=0;WT=0;ANN=A|intergenic_region|MODIFIER|RP11-374C13.1-RP5-1166F10.1|ENSG00000229280-ENSG00000235054|intergenic_region|ENSG00000229280-ENSG00000235054|||n.4367323G>A||||||\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:255:647:645:237:408:0.6326:5.3455E-166:61:55:194:43:333:75\n")


        tabix_index(os.path.join(self.tempdir,"varscan.vcf"), preset="vcf")

    def tearDown(self):
        # delete fixtures
        shutil.rmtree(self.tempdir)


    def test_add_AD_field_using(self):
        from src.lib.data.files.vcf import add_AD_field_using_DP4
        add_AD_field_using_DP4(os.path.join(self.tempdir,"in.vcf"), os.path.join(self.tempdir,"out.vcf"))
        with open(os.path.join(self.tempdir,"out.vcf"), 'r') as output_vcf:
            lines = output_vcf.readlines()
            self.assertTrue("fileformat" in lines[0])
            self.assertTrue("ID=PASS" in lines[1])
            self.assertTrue("contig" in lines[2])
            self.assertTrue("ID=DP4," in lines[3])
            self.assertTrue("ID=DP," in lines[4])
            self.assertTrue("ID=AD" in lines[5])
            self.assertTrue("AD=34915,235" in lines[7])


    def test_create_sample_format_from_info(self):
        from src.lib.data.files.vcf import create_sample_format_from_info_lofreq
        from src.lib.data.files.vcf import add_contigs_to_header
        add_contigs_to_header(
            os.path.join(self.tempdir,"in.withoutcontigs.vcf"),
            os.path.join(self.tempdir,"out.withcontigs.vcf"),
            os.path.join(self.tempdir,"reference_info"),
            "hg19")
        create_sample_format_from_info_lofreq(
            "sample1",
             os.path.join(self.tempdir,"out.withcontigs.vcf"),
             os.path.join(self.tempdir,"sample.vcf"))
        with open(os.path.join(self.tempdir,"sample.vcf"), 'r') as output_vcf:
             lines = output_vcf.readlines()
             self.assertTrue("fileformat" in lines[0])
             self.assertTrue("ID=PASS" in lines[1])
             self.assertTrue(lines[2].startswith("##INFO=<ID=DP4,"))
             self.assertTrue(lines[3].startswith("##INFO=<ID=DP,"))
             self.assertTrue(lines[4].startswith("##INFO=<ID=AF,"))
             self.assertTrue(lines[5].startswith("##INFO=<ID=AD,"))
             self.assertEqual(lines[6].rstrip(), "##contig=<ID=chr7,length=158821424,assembly=hg19>")
             self.assertTrue(lines[7].startswith("##FORMAT=<ID=AF,"))
             self.assertTrue(lines[8].startswith("##FORMAT=<ID=AD,"))
             self.assertTrue(lines[9].startswith("##FORMAT=<ID=DP,"))
             self.assertTrue(lines[10].startswith("##FORMAT=<ID=DP4,"))
             self.assertTrue(lines[11].startswith("##FORMAT=<ID=GT,"))
             self.assertEqual(lines[12], "#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tsample1\n")
             self.assertEqual(lines[13].rstrip(), "chr7\t55249071\t.\tC\tT\t4399\tPASS\tDP=35150;DP4=17465,17450,117,118;AD=34915,235;AF=0.5\tGT:AF:DP4:DP:AD\t0/1:0.5:17465,17450,117,118:35150:34915,235")


    def test_add_contigs_to_header(self):
        from src.lib.data.files.vcf import add_contigs_to_header
        add_contigs_to_header(
            os.path.join(self.tempdir,"in.withoutcontigs.vcf"),
            os.path.join(self.tempdir,"out.withcontigs.vcf"),
            os.path.join(self.tempdir,"reference_info"),
            "hg19")

        with open(os.path.join(self.tempdir,"out.withcontigs.vcf"), 'r') as output_vcf:
            lines = output_vcf.readlines()
            self.assertTrue("fileformat" in lines[0])
            self.assertTrue("ID=PASS" in lines[1])
            self.assertTrue("INFO=<ID=DP4," in lines[2])
            self.assertTrue("INFO=<ID=DP," in lines[3])
            self.assertTrue("INFO=<ID=AF" in lines[4])
            self.assertTrue("INFO=<ID=AD" in lines[5])
            self.assertEqual(lines[6].rstrip(), "##contig=<ID=chr7,length=158821424,assembly=hg19>")

    def test_combine_callers(self):
        from src.lib.data.files.vcf import merge_diffferent_callers
        merge_diffferent_callers("merge.vcf",
            ["freeBayes:" + str(os.path.join(self.tempdir,"freebayes.vcf.gz")),
             #"mutect2:" + str(os.path.join(self.tempdir,"mutect2.vcf.gz")),
             "vardict:" + str(os.path.join(self.tempdir,"vardict.vcf.gz")),
             "varscan:" + str(os.path.join(self.tempdir,"varscan.vcf.gz"))])


if __name__ == '__main__':
    import logging
    import sys
    logging.basicConfig(level=logging.CRITICAL, stream=sys.stdout, format='%(message)s')
    unittest.main()
